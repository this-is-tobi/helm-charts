# -- Provide a name in place of the default application name.
nameOverride: ""
# -- String to fully override the default application name.
fullnameOverride: ""

# Image credentials configuration.
imageCredentials:
  # -- Registry to pull images from.
  registry: ""
  # -- Username to pull images.
  username: ""
  # -- Password to pull images.
  password: ""
  # -- Email to pull images.
  email: ""

# CNPG configuration
# -- Number of instances to spawn in the cluster.
instances: 3
# -- Name of the image used for database. 
# By default (empty string), the operator will install the latest available minor version of the latest major version of PostgreSQL when the operator was released
imageName: ""
# -- Username of the database user (Default is `fullnameOverride` > `nameOverride` > name of the Helm release).
username: ""
# -- Password of the database user (leave empty to auto-generate the password).
password: ""
# -- Password of the postgres superuser (leave empty to auto-generate the password).
postgresPassword: ""
# -- Name of the database (Default is `fullnameOverride` > `nameOverride` > name of the Helm release).
dbName: ""
# -- Enable superuser access.
enableSuperuserAccess: true
# -- Client authentication entries for pg_hba.conf file (See. https://www.postgresql.org/docs/current/auth-pg-hba-conf.html).
pgHba: []
# -- Rolling update strategy used :
# unsupervised: automated update of the primary once all replicas have been upgraded (default)
# supervised: requires manual supervision to perform the switchover of the primary
primaryUpdateStrategy: "unsupervised"
pvcSize: 
  # -- Size of the data PVC used by each cnpg instance.
  data: "10Gi"
  # -- Size of the WAL PVC used by each cnpg instance (if value is `null` then WAL files are stored within the data PVC).
  wal: "5Gi"
# -- Customize Postgresql parameters.
parameters: {}
# dynamic_shared_memory_type = "posix"
# logging_collector = "on"
# log_destination = "csvlog"
# log_directory = "/controller/log"
# log_filename = "postgres"
# log_rotation_age = "0"
# log_rotation_size = "0"
# log_truncate_on_rotation = "false"
# max_parallel_workers = "32"
# max_replication_slots = "32"
# max_worker_processes = "32"
# shared_memory_type = "mmap"
# wal_keep_size = "512MB"
# wal_sender_timeout = "5s"
# wal_receiver_timeout = "5s"
# max_slot_wal_keep_size: "-1"
# -- Additional annotations for created resources.
annotations: {}
# -- Additional cnpg cluster labels.
labels: {}
# -- Whether or not a NodePort service should be created to exposed the database.
exposed: false
# -- Port used for NodePort service. Needs `exposed` tu be true.
nodePort:
# -- Mode used to deploy the cnpg cluster, it should be `primary`, `replica` or `recovery`.
mode: "primary"
initDb:
  # -- Extra configuration of the initDb bootstrap process (See. https://cloudnative-pg.io/documentation/current/cloudnative-pg.v1/#postgresql-cnpg-io-v1-BootstrapInitDB).
  extraArgs: {}
  # encoding: UTF8
  # dataChecksums: false
recovery:
  # -- S3 destination path used for recovery mode (it should be set like `s3://<bucket_name>/<path>`).
  destinationPath: ""
  # -- S3 endpoint used for recovery mode.
  endpointURL: ""
  endpointCA:
    # -- Whether or not to create S3 CA kubernetes secret used used for recovery mode.
    # It will use `secretName`, `endpointCA.key` and `endpointCA.value` to create the secret.
    create: false
    # -- The secret name containing S3 CA used for recovery mode, leave it empty to auto-generate the secret name.
    secretName: ""
    # -- The secret key containing S3 CA used for recovery mode.
    key: "ca.crt"
    # -- The S3 certificate used used for recovery mode.
    # Only needed if `recovery.endpointCA.create` is set to `true`.
    value: ""
  s3Credentials:
    # -- Whether or not to create S3 credentials kubernetes secret used used for recovery mode.
    # It will use `secretName`, `accessKeyId.key`, `accessKeyId.value`, `secretAccessKey.key` and `secretAccessKey.value` to create the secret.
    create: false
    # -- S3 kubernetes secret name used used for recovery mode, leave it empty to auto-generate the secret name.
    secretName: ""
    accessKeyId:
      # -- S3 accessKeyId kubernetes secret key used used for recovery mode.
      key: "accessKeyId"
      # -- S3 accessKeyId value used used for recovery mode.
      # Only needed if `recovery.s3Credentials.create` is set to `true`.
      value: ""
    secretAccessKey:
      # -- S3 secretAccessKey kubernetes secret key used used for recovery mode.
      key: "secretAccessKey"
      # -- S3 secretAccessKey value used used for recovery mode.
      # Only needed if `recovery.s3Credentials.create` is set to `true`.
      value: ""
  # -- Primary cnpg cluster name used for recovery mode.
  clusterName: ""
  # -- Extra configuration of the recovery bootstrap process (See. https://cloudnative-pg.io/documentation/current/cloudnative-pg.v1/#postgresql-cnpg-io-v1-BootstrapRecovery).
  # -- The number of parallel process that will be applied when applying wals.
  maxParallelWal: 8
  extraArgs: {}
    # recoveryTarget:
    #   backupID: 20250214T120000
    #   targetImmediate: true
replica:
  # -- S3 destination path used for replica mode (it should be set like `s3://<bucket_name>/<path>`).
  destinationPath: ""
  # -- S3 endpoint used for replica mode.
  endpointURL: ""
  endpointCA:
    # -- Whether or not to create S3 CA kubernetes secret used used for replica mode.
    # It will use `secretName`, `endpointCA.key` and `endpointCA.value` to create the secret.
    create: false
    # -- The secret name containing S3 CA used for replica mode, leave it empty to auto-generate the secret name.
    secretName: ""
    # -- The secret key containing S3 CA used for replica mode.
    key: "ca.crt"
    # -- The S3 certificate used used for replica mode.
    # Only needed if `replica.endpointCA.create` is set to `true`.
    value: ""
  s3Credentials:
    # -- Whether or not to create S3 credentials kubernetes secret used used for replica mode.
    # It will use `secretName`, `accessKeyId.key`, `accessKeyId.value`, `secretAccessKey.key` and `secretAccessKey.value` to create the secret.
    create: false
    # -- S3 kubernetes secret name used used for replica mode, leave it empty to auto-generate the secret name.
    secretName: ""
    accessKeyId:
      # -- S3 accessKeyId kubernetes secret key used used for replica mode.
      key: "accessKeyId"
      # -- S3 accessKeyId value used used for replica mode.
      # Only needed if `replica.s3Credentials.create` is set to `true`.
      value: ""
    secretAccessKey:
      # -- S3 secretAccessKey kubernetes secret key used used for replica mode.
      key: "secretAccessKey"
      # -- S3 secretAccessKey value used used for replica mode.
      # Only needed if `replica.s3Credentials.create` is set to `true`.
      value: ""
  # -- Primary cnpg cluster name used for replica mode.
  clusterName: ""
  # -- Primary cnpg cluster host used for replica mode.
  host: ""
  # -- Primary cnpg cluster port used for replica mode.
  port: 5432
  # -- Primary database name used for replica mode.
  dbName: ""
  # -- SSL connection config used for replica mode.
  sslMode: "prefer"
  # -- Extra configuration of the replica bootstrap process (See. https://cloudnative-pg.io/documentation/current/cloudnative-pg.v1/#postgresql-cnpg-io-v1-BootstrapConfiguration).
  # -- The number of parallel process that will be applied when applying wals.
  maxParallelWal: 8
  extraArgs: {}
backup:
  # -- Whether or not cnpg cluster deployment should be enabled.
  enabled: false
  # -- S3 destination path for cnpg backups (it should be set like `s3://<bucket_name>/<path>`).
  destinationPath: ""
  # -- S3 endpoint for cnpg backups.
  endpointURL: ""
  endpointCA:
    # -- Whether or not to create S3 CA kubernetes secret used for cnpg backups.
    # It will use `secretName`, `endpointCA.key` and `endpointCA.value` to create the secret.
    create: false
    # -- The secret name containing S3 CA for cnpg backups, leave it empty to auto-generate the secret name.
    secretName: ""
    # -- The secret key containing S3 CA for cnpg backups.
    key: "ca.crt"
    # -- The S3 certificate used for cnpg backups.
    # Only needed if `backup.endpointCA.create` is set to `true`.
    value: ""
  s3Credentials:
    # -- Whether or not to create S3 credentials kubernetes secret used for cnpg backups.
    # It will use `secretName`, `accessKeyId.key`, `accessKeyId.value`, `secretAccessKey.key` and `secretAccessKey.value` to create the secret.
    create: false
    # -- S3 kubernetes secret name used for cnpg backups, leave it empty to auto-generate the secret name.
    secretName: ""
    accessKeyId:
      # -- S3 accessKeyId kubernetes secret key used for cnpg backups.
      key: "accessKeyId"
      # -- S3 accessKeyId value used for cnpg backups.
      # Only needed if `backup.s3Credentials.create` is set to `true`.
      value: ""
    secretAccessKey:
      # -- S3 secretAccessKey kubernetes secret key used for cnpg backups.
      key: "secretAccessKey"
      # -- S3 secretAccessKey value used for cnpg backups.
      # Only needed if `backup.s3Credentials.create` is set to `true`.
      value: ""
  # -- Which compression algorithm should be used for cnpg backups (should be one of "gzip", "bzip2" or "snappy"), leave blank to disable compression.
  compression: ""
  # -- The cron rule used for cnpg backups. By default it runs every 6 hours.
  cron: "0 0 */6 * * *"
  # -- Retention policy for cnpg backups recurrences.
  retentionPolicy: "14d"
resources:
  requests:
    # -- Memory request for the database instance.
    memory: "512Mi"
    # -- CPU request for the database instance.
    cpu: "250m"
  limits:
    # -- Memory limit for the database instance.
    memory: "1Gi"
    # -- CPU limit for the database instance.
    cpu: "500m"


# CNPG operator configuration
cnpg-operator:
  # -- Whether or not cnpg operator should be deployed (See. https://artifacthub.io/packages/helm/cloudnative-pg/cloudnative-pg?modal=values).
  enabled: false
